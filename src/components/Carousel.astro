---
---

<div class="wrapper">
  <span id="left"
    ><img src="/icons/prev.svg" alt="pil som viser forrige nyhed" />
  </span>
  <div class="carousel">
    <img src="/img/montana_aveny_chair.webp" alt="img" draggable="false" />
    <img src="/img/andreasMedPlade.webp" alt="img" draggable="false" />
    <img src="/img/montana1.webp" alt="img" draggable="false" />
    <img src="/img/aym.webp" alt="img" draggable="false" />
    <img src="/img/skamel.webp" alt="img" draggable="false" />
  </div>
  <span id="right">
    <img src="/icons/next.svg" alt="pil som viser nÃ¦ste nyhed" />
  </span>
</div>

<style>
  .wrapper {
    grid-column: 4/13;
    display: relative;
    display: flex;
    max-width: 1200px;
    position: relative;
  }
  .wrapper span {
    top: 50%;
    height: 44px;
    width: 44px;
    color: #343f4f;
    cursor: pointer;
    font-size: 1.15rem;
    position: absolute;
    text-align: center;
    line-height: 44px;
    background: #fff;
    transform: translateY(-50%);
    transition: transform 0.1s linear;
  }
  .wrapper span:active {
    transform: translateY(-50%) scale(0.9);
  }

  .wrapper span:first-child {
    left: -7%;
    display: none;
  }
  .wrapper span:last-child {
    right: -7%;
  }
  .wrapper .carousel {
    font-size: 0px;
    cursor: pointer;
    overflow: hidden;
    white-space: nowrap;
    scroll-behavior: smooth;
  }
  .carousel.dragging {
    cursor: grab;
    scroll-behavior: auto;
  }
  .carousel.dragging img {
    pointer-events: none;
  }
  .carousel img {
    height: 450px;
    object-fit: cover;
    user-select: none;
    margin-left: 14px;
    width: calc(100% / 3);
  }
  .carousel img:first-child {
    margin-left: 0px;
  }

  @media screen and (max-width: 900px) {
    .carousel img {
      width: calc(100% / 2);
    }
  }

  @media screen and (max-width: 550px) {
    .carousel img {
      width: 100%;
    }

    .wrapper {
      grid-column: 2/11;
    }

    .wrapper span:first-child {
      left: -17%;
      display: none;
    }
    .wrapper span:last-child {
      right: -17%;
    }
  }
</style>

<script>
  const carousel = document.querySelector(".carousel"),
    firstImg = carousel.querySelectorAll("img")[0],
    arrowIcons = document.querySelectorAll(".wrapper span");

  let isDragStart = false,
    isDragging = false,
    prevPageX,
    prevScrollLeft,
    positionDiff;

  const showHideIcons = () => {
    // showing and hiding prev/next icon according to carousel scroll left value
    let scrollWidth = carousel.scrollWidth - carousel.clientWidth; // getting max scrollable width
    arrowIcons[0].style.display = carousel.scrollLeft == 0 ? "none" : "block";
    arrowIcons[1].style.display =
      carousel.scrollLeft == scrollWidth ? "none" : "block";
  };

  arrowIcons.forEach((icon) => {
    icon.addEventListener("click", () => {
      let firstImgWidth = firstImg.clientWidth + 14; // getting first img width & adding 14 margin value
      // if clicked icon is left, reduce width value from the carousel scroll left else add to it
      carousel.scrollLeft += icon.id == "left" ? -firstImgWidth : firstImgWidth;
      setTimeout(() => showHideIcons(), 60); // calling showHideIcons after 60ms
    });
  });

  const autoSlide = () => {
    // if there is no image left to scroll then return from here
    if (
      carousel.scrollLeft - (carousel.scrollWidth - carousel.clientWidth) >
        -1 ||
      carousel.scrollLeft <= 0
    )
      return;

    positionDiff = Math.abs(positionDiff); // making positionDiff value to positive
    let firstImgWidth = firstImg.clientWidth + 14;
    // getting difference value that needs to add or reduce from carousel left to take middle img center
    let valDifference = firstImgWidth - positionDiff;

    if (carousel.scrollLeft > prevScrollLeft) {
      // if user is scrolling to the right
      return (carousel.scrollLeft +=
        positionDiff > firstImgWidth / 3 ? valDifference : -positionDiff);
    }
    // if user is scrolling to the left
    carousel.scrollLeft -=
      positionDiff > firstImgWidth / 3 ? valDifference : -positionDiff;
  };

  const dragStart = (e) => {
    // updatating global variables value on mouse down event
    isDragStart = true;
    prevPageX = e.pageX || e.touches[0].pageX;
    prevScrollLeft = carousel.scrollLeft;
  };

  const dragging = (e) => {
    // scrolling images/carousel to left according to mouse pointer
    if (!isDragStart) return;
    e.preventDefault();
    isDragging = true;
    carousel.classList.add("dragging");
    positionDiff = (e.pageX || e.touches[0].pageX) - prevPageX;
    carousel.scrollLeft = prevScrollLeft - positionDiff;
    showHideIcons();
  };

  const dragStop = () => {
    isDragStart = false;
    carousel.classList.remove("dragging");

    if (!isDragging) return;
    isDragging = false;
    autoSlide();
  };

  carousel.addEventListener("mousedown", dragStart);
  carousel.addEventListener("touchstart", dragStart);

  document.addEventListener("mousemove", dragging);
  carousel.addEventListener("touchmove", dragging);

  document.addEventListener("mouseup", dragStop);
  carousel.addEventListener("touchend", dragStop);
</script>
